plugins {
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
    //id 'com.google.cloud.tools.jib' version '3.4.1'
	id "org.sonarqube" version '6.1.0.5360'
	//id "org.flywaydb.flyway" version "10.0.0"
	id 'jacoco'
	id 'java'
}

group = "org.kerminator"
version = "0.0.1-SNAPSHOT"

java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
	mavenCentral()
	maven { url='https://repo.spring.io/milestone' }
}

sonarqube {
  properties {
    property "sonar.projectKey", "jahpola_spring-hello"
    property "sonar.organization", "jahpola"
    property "sonar.host.url", "https://sonarcloud.io"
	property "sonar.tests", "src/test/java"
  }
} 

tasks.named("bootBuildImage") {
	imageName = "public.ecr.aws/kerminator/spring-${project.name}"
	createdDate ="now"
	environment["BP_JVM_VERSION"] = "21"
	//environment["BP_JVM_JLINK_ENABLED"] = "true"
	//environment["BP_JVM_CDS_ENABLED"] = "true"
	//environment["BP_SPRING_AOT_ENABLED"]="true"
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-fabric8-all'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
	//implementation 'org.flywaydb:flyway-core'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:postgresql'
	implementation "io.micrometer:micrometer-tracing-bridge-otel"
	implementation "io.opentelemetry:opentelemetry-exporter-otlp"
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'org.postgresql:postgresql'
	developmentOnly("org.springframework.boot:spring-boot-docker-compose")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named("test") {
	useJUnitPlatform()
	maxParallelForks = 4
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,exclude: [
				"**/HelloApplication**"
			])
		}))
  	}
}