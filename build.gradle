plugins {
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.4'
    //id 'com.google.cloud.tools.jib' version '3.4.1'
	id "org.sonarqube" version '5.0.0.4638'
	//id "org.flywaydb.flyway" version "10.0.0"
	id 'jacoco'
	id 'java'
}

group = "org.kerminator"
version = "0.0.1-SNAPSHOT"

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sonarqube {
  properties {
    property "sonar.projectKey", "jahpola_spring-hello"
    property "sonar.organization", "jahpola"
    property "sonar.host.url", "https://sonarcloud.io"
  }
} 

repositories {
	mavenCentral()
}

// jib {
// 	from {
// 		platforms {
//     		platform {
// 				architecture = 'amd64'
// 				os = 'linux'
//     		}
// 			platform {
// 				architecture = 'arm64'
// 				os = 'linux'
// 			}
//     }
		
// 	}
// 	to {
// 		image = "public.ecr.aws/kerminator/spring-hello:latest"
// 		credHelper = "ecr-login"
// 	}
// 	// container {
// 	// 	format = "OCI"
// 	// }
//}

tasks.named("bootBuildImage") {
	builder = "paketobuildpacks/builder-jammy-tiny:latest"
	imageName = "public.ecr.aws/kerminator/${project.name}"
	environment["BP_JVM_JLINK_ENABLED"] = "true"
	environment["BP_JVM_VERSION"] = "21"
	//environment["BP_JVM_CDS_ENABLED"] = "true"
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-fabric8-all'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation "io.micrometer:micrometer-tracing-bridge-otel"
	implementation "io.opentelemetry:opentelemetry-exporter-otlp"
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'com.h2database:h2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named("test") {
	useJUnitPlatform()
	maxParallelForks = 4
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,exclude: [
				"**/HelloApplication**"
			])
		}))
  	}
}